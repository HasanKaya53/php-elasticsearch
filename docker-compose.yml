version: '3' #docker version





services:
  db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - local_net

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_PORT=3306
      - PMA_HOST=db
      - MYSQL_ROOT_PASSWORD=root
    depends_on:
      - db
    networks:
      - local_net



  mongo:
    image: mongo
    ports:
      - 8003:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME = root
      - MONGO_INITDB_ROOT_PASSWORD = root
    volumes:
      - mongo_data:/data/db # MongoDB verilerini saklamak için bir Docker volume'ı
    networks:
      - local_net


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - local_net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.3
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - local_net




  www:
    image: php:8.2-apache
    volumes:
      - ./www:/var/www/html #bu dizindeki her şeyi /var/www/html dizinine bağla
    ports:
      - "8001:80"
    command: bash -c "a2enmod rewrite && apache2-foreground" #htaccess dosyalarını çalıştırmak için
    networks:
      - local_net
      



networks:
  local_net:
    driver: bridge


volumes:
  esdata:
  mongo_data:
  db_data:





      

  